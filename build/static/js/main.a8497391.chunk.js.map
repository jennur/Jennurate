{"version":3,"sources":["components/Footer.js","components/FlashyHeader.js","pages/Home.js","scripts/starBackground.js","components/Header.js","components/BlogPost.js","pages/Blog.js","App.js","serviceWorker.js","index.js"],"names":["Footer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","React","Component","FlashyHeader","Link","to","title","Home","id","components_FlashyHeader","i","d3","append","attr","style","Math","random","window","innerHeight","innerWidth","transition","duration","setTimeout","bg","Header","props","BlogPost","children","Blog","components_Header","components_BlogPost","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yPAgBiBA,EAdjB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEM,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,oCAAmCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAC5DH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,yCAAwCJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACjEH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,6CAA4CJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAPjFhB,EAAA,CAA4BkB,IAAMC,uCCenBC,mLAZX,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,aACAH,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAT,sBACbT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,4BAA4BM,MAAM,uBAAnE,cACAV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,8BAA8BM,MAAM,0BAArE,0BACAV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,2BARmBE,IAAMC,WCgBlBK,mLAZX,OACIX,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,OAAKU,GAAG,OACRZ,EAAAC,EAAAC,cAACW,EAAD,oDCRO,WACb,IAAI,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IACtBC,IAAU,OACPC,OAAO,KACPC,KAAK,QAAS,OACdC,MAAM,MAAOC,KAAKC,SAASC,OAAOC,YAAY,MAC9CJ,MAAM,OAAQC,KAAKC,SAASC,OAAOE,WAAW,MAC9CC,aACAC,SAAS,KACTP,MAAM,MAAOC,KAAKC,SAASC,OAAOC,YAAY,MAC9CJ,MAAM,OAAQC,KAAKC,SAASC,OAAOE,WAAW,MAGnDG,WAAW,WACTX,IAAa,KACVS,aACAC,SAAS,KACTP,MAAM,MAAOC,KAAKC,SAASC,OAAOC,YAAY,MAC9CJ,MAAM,OAAQC,KAAKC,SAASC,OAAOE,WAAW,OAE5C,ODPLI,UAXetB,IAAMC,WEQVsB,mLARX,OACI5B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,UAAMX,KAAKsC,MAAMnB,eAJNL,IAAMC,WCWZwB,mLARX,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAIX,KAAKsC,MAAME,kBALF1B,IAAMC,WCiCd0B,mLA3BX,OACEhC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,KAAT,WACAT,EAAAC,EAAAC,cAAC+B,EAAD,CAAQvB,MAAM,sBACdV,EAAAC,EAAAC,cAAA,WAASC,UAAU,QACnBH,EAAAC,EAAAC,cAACgC,EAAD,uDACmDlC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,oDADnD,6BACiIpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBADjI,gIAE+EpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAF/E,oBAGmBpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAHnB,QAGsEpC,EAAAC,EAAAC,cAAA,8BAHtE,IAG+FF,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAH/F,4SAM0DpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAN1D,mPAQwHpC,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBACpHpC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WATT,aAUcF,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAVd,qIAWKpC,EAAAC,EAAAC,cAAA,KAAGE,KAAK,6BAAR,UAXL,+DAW+GJ,EAAAC,EAAAC,cAAA,QAAMiC,KAAK,MAAMC,aAAW,UAA5B,gBAX/G,0IAaIpC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAbT,wJARaG,IAAMC,WCsBV+B,mLAdX,OACErC,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhC,IACjCX,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWX,MAGtChC,EAAAC,EAAAC,cAAC0C,EAAD,cAVYtC,mBCCEuC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KAAetC,EAAAC,EAAAC,cAACiD,EAAD,OAAyBC,SAASC,eAAe,SDwH1E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a8497391.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Footer extends React.Component {\n    render(){\n      return(\n        <footer className=\"footer\">\n          <ul className=\"social-media\">\n            <li><a href=\"https://www.instagram.com/jennur\"><i className=\"fa fa-instagram\"></i></a></li>\n            <li><a href=\"https://www.facebook.com/jenny.bonsak\"><i className=\"fa fa-facebook\"></i></a></li>\n            <li><a href=\"https://www.linkedin.com/in/jenny-bonsak/\"><i className=\"fa fa-linkedin\"></i></a></li>\n          </ul>\n        </footer>\n      );\n    }\n  }\n\n  export default Footer; ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass FlashyHeader extends React.Component {\n  render(){\n    return(\n      <div className=\"display-content\">\n        <h1 className=\"title\">jennurate</h1>\n        <p>Blogish ~ <Link to=\"blogish\">Plants and Codies</Link></p>\n        <a className=\"display-link\" href=\"http://www.asteroidod.com\" title=\"Asteroid of the Day\">AsteroidOD</a>\n        <a className=\"display-link\" href=\"http://www.icefireboard.com\" title=\"A Game of Ice and Fire\">A Game of Ice and Fire</a>\n        <p className=\"sign\">by Jenny Bonsak</p>\n      </div>\n    );\n  }\n}\n\nexport default FlashyHeader;","import React from 'react';\nimport FlashyHeader from '../components/FlashyHeader';\nimport bg from '../scripts/starBackground';\n\nclass Home extends React.Component {\n\n  render(){\n    return(\n        <section>\n        <div id=\"bg\"></div>\n        <FlashyHeader />\n        </section>\n    );\n  }\n  componentDidMount () {\n    bg();\n}\n}\n\nexport default Home; ","import * as d3 from 'd3';\r\n\r\nexport default function bg() {\r\n  for(let i = 0; i < 300; i++){\r\n    d3.select('#bg')\r\n      .append('i')\r\n      .attr('class', 'dot')\r\n      .style('top', Math.random()*window.innerHeight+'px')\r\n      .style('left', Math.random()*window.innerWidth+'px')\r\n      .transition()\r\n      .duration(20000)\r\n      .style('top', Math.random()*window.innerHeight+'px')\r\n      .style('left', Math.random()*window.innerWidth+'px');\r\n  }\r\n\r\n  setTimeout(() => {\r\n    d3.selectAll('i')\r\n      .transition()\r\n      .duration(20000)\r\n      .style('top', Math.random()*window.innerHeight+'px')\r\n      .style('left', Math.random()*window.innerWidth+'px');\r\n\r\n    ; }, 20100);\r\n}","import React from 'react';\n\nclass Header extends React.Component {\n  render(){\n    return(\n        <header className=\"header\">\n          <h1>{ this.props.title }</h1>\n        </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass BlogPost extends React.Component {\n\n  render(){\n    return(\n      <div className=\"blog__post\">\n          <p>{this.props.children}</p>\n      </div>\n    );\n  }\n}\n\nexport default BlogPost; ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport BlogPost from '../components/BlogPost';\n\nclass Blog extends React.Component {\n\n  render(){\n    return(\n      <div>\n      <Link to=\"/\">Go home</Link>\n      <Header title=\"Plants and Codies\"></Header>\n      <section className=\"blog\">\n      <BlogPost>\n          Hey everyone, it's officially spring in Norway <span role=\"img\" aria-label=\"Emojis\">‚òÄÔ∏èüåøüá≥üá¥</span>, I just got my sunscreen <span role=\"img\" aria-label=\"Emojis\">üß¥</span>, I'm ready for summer and here's my new blogish! \n          When I think of blogs I imagine all these fancy cookies with glaze on them <span role=\"img\" aria-label=\"Emojis\">üßÅ</span>, \n          pink lipsticks <span role=\"img\" aria-label=\"Emojis\">üíÑ</span> and <i>outfit of the day</i> <span role=\"img\" aria-label=\"Emojis\">üëò</span>, that's why I couldn't help calling this a blogish. Don't get me wrong, \n          I'm a girl, I like lipstick, but most likely there will be no\n          cookies to find here, and especially not an outfit of the day - but who knows, sometimes I surprise myself.\n          You might risk bumping into some plants here, though! <span role=\"img\" aria-label=\"Emojis\">üå±</span>\n          I love my plants, they're my babies. I have new ones born every once in a while, as I plant the babies of everything I eat. \n          I'm just too curious about what the mother looked like as a baby to keep myself from letting them outgrow my house. <span role=\"img\" aria-label=\"Emojis\">üè°</span>\n          <br/><br/>\n          Anyplants <span role=\"img\" aria-label=\"Emojis\">üå¥</span> (I'm about to grow a palm tree..), I just want to share the things I'm excited about. So here goes. I usually put all my stuff on \n           <a href=\"https://github.com/jennur\">GitHub</a>, but that's just not as satisfying, so that's why I'm here <span role=\"img\" aria-label=\"Emojis\">ü§†</span>. I feel pretty\n          confident that this will end up being about tech and plants, so I guess I might as well just call it Plants and Codies.\n          <br/><br/>\n          That's it for now, I'll try to get this thing up and running! But first I want to redo my site, so plz gimme just a tiny piece of patience.\n      </BlogPost>\n      </section>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport './styles/main.scss';\nimport './scripts/starBackground';\n\n\nimport Home from './pages/Home';\nimport Blog from './pages/Blog';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/blogish\" component={Blog}/>\n        </Switch>\n      </Router>\n      <Footer/>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}